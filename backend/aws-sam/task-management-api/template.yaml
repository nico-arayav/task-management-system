AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  task-management-api

  Task Management System API using FastAPI and DynamoDB

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
    LoggingConfig:
      LogFormat: JSON
    Runtime: python3.9

Resources:
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TaskManagementApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"  # Allow all origins (use specific domains for production)
        AllowHeaders: "'Content-Type,Authorization'"
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"

  TaskManagementFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetTasks:
          Type: Api
          Properties:
            RestApiId: !Ref TaskManagementApi
            Path: /api/tasks
            Method: get
        CreateTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskManagementApi
            Path: /api/tasks
            Method: post
        UpdateTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskManagementApi
            Path: /api/tasks/{task_id}
            Method: put
        DeleteTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskManagementApi
            Path: /api/tasks/{task_id}
            Method: delete
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName

Parameters:
  TableName:
    Type: String
    Default: tasks
    Description: Name of the DynamoDB table

Outputs:
  TaskManagementApi:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${TaskManagementApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/"
  TaskManagementFunction:
    Description: Task Management Lambda Function ARN
    Value: !GetAtt TaskManagementFunction.Arn
  TaskManagementFunctionIamRole:
    Description: Implicit IAM Role created for Task Management function
    Value: !GetAtt TaskManagementFunctionRole.Arn